# ----------------------------------------
# CLASE 5: CONDICIONALES EN PYTHON
# ----------------------------------------

# Las estructuras condicionales permiten ejecutar c√≥digo solo si se cumple cierta condici√≥n.

# Sintaxis b√°sica:

# if condici√≥n:
#     c√≥digo si es verdadero
# elif otra_condici√≥n:
#     c√≥digo si esa condici√≥n es verdadera
# else:
#     c√≥digo si ninguna se cumple


# ----------------------------------------
# ‚úÖ EJEMPLO B√ÅSICO CON if

edad = 18

if edad >= 18:
    print("Sos mayor de edad.")

# El bloque debajo del if se ejecuta solo si la condici√≥n es True


# ----------------------------------------
# ‚úÖ if - else

numero = int(input("Ingres√° un n√∫mero: "))

if numero % 2 == 0:
    print("El n√∫mero es par.")
else:
    print("El n√∫mero es impar.")


# ----------------------------------------
# ‚úÖ if - elif - else

nota = int(input("Ingres√° tu nota (0 a 10): "))

if nota >= 9:
    print("Excelente")
elif nota >= 7:
    print("Muy bien")
elif nota >= 4:
    print("Aprobado")
else:
    print("Desaprobado")


# ----------------------------------------
# üîÅ COMBINANDO CON OPERADORES L√ìGICOS

edad = int(input("¬øQu√© edad ten√©s? "))

if edad >= 18 and edad <= 65:
    print("Sos adulto.")
elif edad < 18:
    print("Sos menor de edad.")
else:
    print("Sos mayor de 65 a√±os.")


# ----------------------------------------
# ‚ö†Ô∏è IMPORTANTE: identaci√≥n

# Python usa espacios (indentaci√≥n) para definir bloques.
# Todo el c√≥digo dentro del if debe estar indentado (generalmente 4 espacios o 1 tab)


# ----------------------------------------
# üß† CONDICIONES SIMPLIFICADAS (one-liners)

# Solo si la acci√≥n es muy simple:
x = 5
if x > 0: print("Es positivo")

# Operador ternario (una forma corta de if-else):
es_par = "S√≠" if x % 2 == 0 else "No"
print("¬øEs par?", es_par)

# Tambi√©n puede usarse para asignar valores en una sola l√≠nea seg√∫n condiciones.
# Ejemplo:
temperatura = 30
estado = "Calor" if temperatura > 25 else "Templado"
print("Clima:", estado)


# ----------------------------------------
# üß© ESTRUCTURA MATCH - CASE (Python 3.10+)

# match case permite comparar una variable con m√∫ltiples valores posibles, de forma m√°s ordenada que varios elif.

# Ejemplo:
comando = input("Ingres√° un comando: ").lower()

match comando:
    case "saludar":
        print("¬°Hola!")
    case "despedir":
        print("¬°Chau!")
    case "ayuda":
        print("Comandos disponibles: saludar, despedir, ayuda.")
    case _:
        print("Comando no reconocido.")

# El guion bajo (_) es el caso por defecto, como el 'else'.


# ----------------------------------------
# üß™ MINI PROYECTO DE PR√ÅCTICA

# Pedir al usuario:
# - su edad
# - si tiene entrada (s√≠/no)
# Y decir si puede entrar a un evento (mayor de 18 y con entrada)

# Descomentalo para probarlo:

# edad = int(input("¬øQu√© edad ten√©s? "))
# tiene_entrada = input("¬øTen√©s entrada? (s√≠/no): ").lower()

# if edad >= 18 and tiene_entrada == "s√≠":
#     print("Pod√©s entrar al evento.")
# else:
#     print("No pod√©s entrar.")


# ----------------------------------------
# CONCLUSI√ìN DE LA CLASE
# ----------------------------------------

# En esta clase aprendiste:
# - Estructura if, elif y else
# - Evaluaci√≥n de condiciones
# - Uso de operadores l√≥gicos con condicionales
# - El concepto de indentaci√≥n
# - C√≥mo crear decisiones simples y m√∫ltiples
# - El operador ternario para expresiones en una l√≠nea
# - La estructura match-case para m√∫ltiples opciones (Python 3.10+)

# Pr√≥xima clase: bucles (while y for) para repetir acciones.
