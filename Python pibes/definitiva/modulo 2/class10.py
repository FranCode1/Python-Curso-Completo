# ----------------------------------------
# CLASE 10: FUNCIONES EN PYTHON
# ----------------------------------------

# ¬øQu√© es una funci√≥n?
# Una funci√≥n es un bloque de c√≥digo que se puede reutilizar.
# Se define una sola vez y se puede llamar las veces que quieras.

# üìå Sintaxis b√°sica:
# def nombre_de_funcion(par√°metros):
#     bloque de c√≥digo

# ‚úÖ Ejemplo simple:

def saludar():
    print("¬°Hola! Bienvenido al curso.")

saludar()  # llamada a la funci√≥n


# ----------------------------------------
# üî¢ FUNCIONES CON PAR√ÅMETROS

def saludar_persona(nombre):
    print(f"Hola, {nombre}.")

saludar_persona("Franco")
saludar_persona("Luc√≠a")


# ----------------------------------------
# üîÅ FUNCIONES CON RETORNO

# Usamos return para devolver un valor

def sumar(a, b):
    resultado = a + b
    return resultado

total = sumar(5, 3)
print("Resultado:", total)


# ----------------------------------------
# ‚úÖ PAR√ÅMETROS OPCIONALES / POR DEFECTO

def presentar(nombre, edad=18):
    print(f"{nombre} tiene {edad} a√±os.")

presentar("Tom√°s")          # usa valor por defecto
presentar("Mar√≠a", 22)      # sobrescribe


# ----------------------------------------
# üéØ FUNCIONES CON VALORES VARIABLES

# *args ‚Üí m√∫ltiples argumentos
def sumar_todo(*numeros):
    total = 0
    for num in numeros:
        total += num
    return total

print(sumar_todo(1, 2, 3, 4))  # 10

# **kwargs ‚Üí m√∫ltiples claves y valores
def mostrar_info(**datos):
    for clave, valor in datos.items():
        print(f"{clave}: {valor}")

mostrar_info(nombre="Franco", edad=22, ciudad="C√≥rdoba")


# ----------------------------------------
# üîÅ REUTILIZACI√ìN DE FUNCIONES

def calcular_area_rectangulo(base, altura):
    return base * altura

area1 = calcular_area_rectangulo(5, 2)
area2 = calcular_area_rectangulo(3, 4)

print("√Årea 1:", area1)
print("√Årea 2:", area2)


# ----------------------------------------
# üß™ MINI PROYECTO PR√ÅCTICO

# Crear una funci√≥n que reciba un nombre y edad, y diga si puede votar

# def puede_votar(nombre, edad):
#     if edad >= 16:
#         print(f"{nombre} puede votar.")
#     else:
#         print(f"{nombre} NO puede votar.")

# nombre = input("Tu nombre: ")
# edad = int(input("Tu edad: "))

# puede_votar(nombre, edad)


# ----------------------------------------
# CONCLUSI√ìN DE LA CLASE
# ----------------------------------------

# En esta clase aprendiste:
# - Qu√© es una funci√≥n y c√≥mo se define
# - C√≥mo pasar y retornar valores
# - Par√°metros opcionales y variables (*args, **kwargs)
# - Reutilizar funciones para mantener el c√≥digo limpio
# - Crear l√≥gica dentro de funciones

# Pr√≥xima clase: Programaci√≥n orientada a objetos ‚Äì clases, atributos y m√©todos.
