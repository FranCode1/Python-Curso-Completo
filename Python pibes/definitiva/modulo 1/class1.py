# ----------------------------------------
# CLASE 1: INTRODUCCI√ìN A PYTHON
# ----------------------------------------

# üìå ¬øQu√© es Python?
# Python es un lenguaje de programaci√≥n interpretado, de alto nivel, 
# de prop√≥sito general y muy f√°cil de leer. Fue creado por Guido van Rossum
# y su primera versi√≥n fue lanzada en 1991.

# ‚úÖ Usos comunes de Python:
# - Desarrollo web (con frameworks como Django, Flask)
# - Ciencia de datos y machine learning
# - Automatizaci√≥n de tareas
# - Scripts para administrar sistemas
# - Videojuegos (con pygame)
# - Aplicaciones de escritorio

# üîç ¬øPor qu√© aprender Python?
# - Sintaxis simple y clara
# - Comunidad enorme
# - Muchas librer√≠as disponibles
# - Vers√°til y potente


# -------------------------------
# PRIMER CONTACTO CON PYTHON
# -------------------------------

# Vamos a imprimir un mensaje en pantalla usando la funci√≥n print()

print("Hola, mundo!")  # Este es el cl√°sico primer programa

# üìù Comentarios:
# Todo lo que est√° despu√©s del s√≠mbolo # es un comentario y no se ejecuta
# Se usa para explicar el c√≥digo o dejar anotaciones


# -------------------------------
# TIPOS DE DATOS B√ÅSICOS
# -------------------------------

# üî¢ N√∫meros
print(5)          # Entero
print(3.14)       # Decimal (float)

# üî§ Texto (Strings)
print("Esto es un string")

# üß† Booleanos
print(True)       # Verdadero
print(False)      # Falso

# üì¶ Python detecta autom√°ticamente el tipo de dato


# -------------------------------
# VARIABLES
# -------------------------------

# Una variable guarda un valor que pod√©s usar m√°s adelante
mensaje = "Bienvenidos al curso de Python"
numero = 42
pi = 3.14159
activo = True

print(mensaje)
print(numero)
print(pi)
print(activo)

# Pod√©s reasignar una variable:
numero = 100
print("Nuevo valor de n√∫mero:", numero)


# -------------------------------
# FUNCIONES B√ÅSICAS
# -------------------------------

# type() nos dice el tipo de dato
print(type(mensaje))   # <class 'str'>
print(type(numero))    # <class 'int'>
print(type(pi))        # <class 'float'>
print(type(activo))    # <class 'bool'>


# -------------------------------
# ERRORES COMUNES DE PRINCIPIANTES
# -------------------------------

# ‚ùå Olvidar las comillas
# print(Hola mundo)   ‚Üê Esto da error, deber√≠a ser print("Hola mundo")

# ‚ùå Dejar espacios de m√°s
#   print("Hola")     ‚Üê Esto tambi√©n da error por identaci√≥n (no en este caso, pero en funciones s√≠)


# -------------------------------
# INPUT (Entrada del usuario)
# -------------------------------

# input() sirve para pedir algo al usuario
# nombre = input("¬øC√≥mo te llam√°s? ")
# print("Hola,", nombre)

# üß™ Pod√©s probar esto descomentando las l√≠neas anteriores y ejecutando el c√≥digo


# -------------------------------
# CONCLUSI√ìN DE LA CLASE
# -------------------------------

# En esta clase vimos:
# - Qu√© es Python y por qu√© aprenderlo
# - C√≥mo imprimir texto en pantalla
# - Tipos de datos b√°sicos: int, float, str, bool
# - C√≥mo crear y usar variables
# - Uso b√°sico de la funci√≥n input()
# - Comentarios y errores comunes

# En la pr√≥xima clase veremos m√°s sobre tipos de datos y operaciones con ellos.
