# =====================================================================
# EJERCICIO 41: Juego Adivinar N√∫mero
# ---------------------------------------------------------------------
# Crear un juego donde la computadora elija un n√∫mero entre 1 y 10 (usar random)
# y el usuario tenga 3 intentos. Por cada intento, mostrar si el n√∫mero ingresado
# es mayor o menor que el n√∫mero secreto. Opcionalmente, indicar si se acerca o se aleja.
# Todo encapsulado en funciones.
# =====================================================================

import random

# ---------- Forma 1: b√°sica ----------
def adivinar_1():
    numero_secreto = random.randint(1, 10)
    intentos = 3

    for i in range(intentos):
        try:
            num_user = int(input(f"Intento {i+1}/{intentos}: "))
            if num_user == numero_secreto:
                print(f"üéâ ¬°Felicidades! Era {numero_secreto}.")
                break
            elif num_user > numero_secreto:
                print("‚ùå Tu n√∫mero es mayor.")
            else:
                print("‚ùå Tu n√∫mero es menor.")
        except ValueError:
            print("‚ö†Ô∏è Ingresa un n√∫mero v√°lido.")
    else:
        print(f"üò¢ Se acabaron los intentos. N√∫mero secreto: {numero_secreto}.")

# ---------- Forma 2: con pistas de cercan√≠a ----------
def adivinar_2():
    numero_secreto = random.randint(1, 10)
    intentos = 3
    ultimo_intento = None

    for i in range(intentos):
        try:
            num_user = int(input(f"Intento {i+1}/{intentos}: "))
            if num_user == numero_secreto:
                print(f"üéâ ¬°Correcto! Era {numero_secreto}.")
                break
            elif num_user > numero_secreto:
                print("‚ùå Mayor que el n√∫mero secreto.")
            else:
                print("‚ùå Menor que el n√∫mero secreto.")

            if ultimo_intento is not None:
                if abs(numero_secreto - num_user) < abs(numero_secreto - ultimo_intento):
                    print("üî• Est√°s m√°s cerca.")
                elif abs(numero_secreto - num_user) > abs(numero_secreto - ultimo_intento):
                    print("‚ùÑÔ∏è Est√°s m√°s lejos.")
            ultimo_intento = num_user
        except ValueError:
            print("‚ö†Ô∏è N√∫mero inv√°lido.")
    else:
        print(f"üò¢ Intentos agotados. N√∫mero secreto: {numero_secreto}.")

# ---------- Forma 3: usando funci√≥n para pista ----------
def dar_pista(secreto, intento):
    if intento > secreto:
        return "‚ùå Mayor"
    elif intento < secreto:
        return "‚ùå Menor"
    else:
        return "üéâ Correcto"

def adivinar_3():
    numero_secreto = random.randint(1, 10)
    intentos = 3
    ultimo_intento = None

    for i in range(intentos):
        try:
            num_user = int(input(f"Intento {i+1}/{intentos}: "))
            pista = dar_pista(numero_secreto, num_user)
            print(pista)
            if pista == "üéâ Correcto":
                break
            if ultimo_intento is not None:
                if abs(numero_secreto - num_user) < abs(numero_secreto - ultimo_intento):
                    print("üî• M√°s cerca")
                elif abs(numero_secreto - num_user) > abs(numero_secreto - ultimo_intento):
                    print("‚ùÑÔ∏è M√°s lejos")
            ultimo_intento = num_user
        except ValueError:
            print("‚ö†Ô∏è N√∫mero inv√°lido.")
    else:
        print(f"üò¢ N√∫mero secreto era: {numero_secreto}.")

# ---------- Forma 4: con while ----------
def adivinar_4():
    numero_secreto = random.randint(1, 10)
    intentos = 3
    count = 0
    ultimo_intento = None

    while count < intentos:
        try:
            num_user = int(input(f"Intento {count+1}/{intentos}: "))
            if num_user == numero_secreto:
                print(f"üéâ Correcto! N√∫mero secreto {numero_secreto}")
                break
            elif num_user > numero_secreto:
                print("‚ùå Mayor")
            else:
                print("‚ùå Menor")

            if ultimo_intento is not None:
                if abs(numero_secreto - num_user) < abs(numero_secreto - ultimo_intento):
                    print("üî• M√°s cerca")
                elif abs(numero_secreto - num_user) > abs(numero_secreto - ultimo_intento):
                    print("‚ùÑÔ∏è M√°s lejos")
            ultimo_intento = num_user
            count += 1
        except ValueError:
            print("‚ö†Ô∏è N√∫mero inv√°lido")
    else:
        print(f"üò¢ Se acabaron los intentos. N√∫mero secreto: {numero_secreto}")

# ---------- Forma 5: versi√≥n con mensaje final detallado ----------
def adivinar_5():
    numero_secreto = random.randint(1, 10)
    intentos = 3
    ultimo_intento = None
    exito = False

    for i in range(intentos):
        try:
            num_user = int(input(f"Intento {i+1}/{intentos}: "))
            if num_user == numero_secreto:
                exito = True
                print(f"üéâ ¬°Acertaste! N√∫mero secreto: {numero_secreto}")
                break
            elif num_user > numero_secreto:
                print("‚ùå N√∫mero mayor")
            else:
                print("‚ùå N√∫mero menor")

            if ultimo_intento is not None:
                diff_actual = abs(numero_secreto - num_user)
                diff_anterior = abs(numero_secreto - ultimo_intento)
                if diff_actual < diff_anterior:
                    print("üî• M√°s cerca que antes")
                elif diff_actual > diff_anterior:
                    print("‚ùÑÔ∏è M√°s lejos que antes")
                else:
                    print("- Igual de lejos que antes")
            ultimo_intento = num_user
        except ValueError:
            print("‚ö†Ô∏è N√∫mero inv√°lido")
    if not exito:
        print(f"üò¢ Fin de intentos. N√∫mero secreto: {numero_secreto}")

# =====================================================================
# Ejecuci√≥n del programa
# =====================================================================
if __name__ == "__main__":
    # Descomentar la forma que quieras probar
    # adivinar_1()
    # adivinar_2()
    # adivinar_3()
    # adivinar_4()
    adivinar_5()
