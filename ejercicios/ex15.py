# ================================================================
# EJERCICIO 15 - Clasificaci√≥n de nota
# ---------------------------------------------------------------
# - Mostrar "Desaprobado" si la nota es menor que 6
# - Mostrar "Aprobado" si la nota est√° entre 6 y 10 (inclusive)
# - Mostrar "Nota inv√°lida" si est√° fuera de ese rango
# ================================================================


# üîπ M√âTODO 1: if-elif-else cl√°sico
nota = int(input("M√©todo 1 - Ingrese una nota: "))

if nota < 6:
    print("Desaprobado")
elif 6 <= nota <= 10:
    print("Aprobado")
else:
    print("Nota inv√°lida")


# üîπ M√âTODO 2: Usando funci√≥n para evaluar nota
def evaluar_nota(n):
    if n < 6:
        return "Desaprobado"
    elif 6 <= n <= 10:
        return "Aprobado"
    else:
        return "Nota inv√°lida"

nota2 = int(input("\nM√©todo 2 - Ingrese una nota: "))
print(evaluar_nota(nota2))


# üîπ M√âTODO 3: Usando operador ternario anidado
nota3 = int(input("\nM√©todo 3 - Ingrese una nota: "))

resultado = (
    "Desaprobado" if nota3 < 6
    else "Aprobado" if 6 <= nota3 <= 10
    else "Nota inv√°lida"
)

print(resultado)


# üîπ M√âTODO 4: Usando un diccionario para clasificar (con validaci√≥n previa)
nota4 = int(input("\nM√©todo 4 - Ingrese una nota: "))

if 0 <= nota4 <= 10:
    clasificacion = {
        True: "Aprobado",
        False: "Desaprobado"
    }
    print(clasificacion[nota4 >= 6])
else:
    print("Nota inv√°lida")


# üîπ M√âTODO 5: Validaci√≥n dentro de un bucle hasta que ingrese una nota v√°lida
while True:
    nota5 = int(input("\nM√©todo 5 - Ingrese una nota: "))
    if nota5 < 0 or nota5 > 10:
        print("Nota inv√°lida, intent√° de nuevo.")
    else:
        if nota5 < 6:
            print("Desaprobado")
        else:
            print("Aprobado")
        break
